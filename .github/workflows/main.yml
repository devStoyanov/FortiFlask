name: CI/CD

on:
  push:
    branches:
      - "main"

jobs:
  build: 
    name: Docker Workflow
    env:
      IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/python-app
    runs-on: ubuntu-latest
    steps:
      -
        name: Generate Tag
        id: prep
        run: |
          name=${{vars.NAME}}
          sha=${GITHUB_SHA:0:7}
          echo "::set-output name=BUILD_ID::${name}-${sha}"
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build, Tag, Push
        run: |
          cd services/web
          docker build -t my_app:latest -f Dockerfile.prod .
          docker tag my_app:latest $IMAGE:${{ steps.prep.outputs.BUILD_ID }}
          docker push $IMAGE:${{ steps.prep.outputs.BUILD_ID }}
        env:
          DOCKER_IMAGE_TAG: ${{ steps.prep.outputs.BUILD_ID }}
        

  pull:
    name: Vm workflow
    env:
      IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/python-app
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate Tag
        id: prep
        run: |
          name=${{vars.NAME}}
          sha=${GITHUB_SHA:0:7}
          echo "::set-output name=BUILD_ID::${name}-${sha}"
          
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Deploy to Vm
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/azureuser/FortiFlask
            docker-compose -f docker-compose.prod.yml down
            docker image rm -f $(docker image ls -q)
            rm .env.prod .env.prod.db
            docker pull devstoyanov/python-app:${{ steps.prep.outputs.BUILD_ID }}
            echo "${{ secrets.ENV_PROD }}" > .env.prod
            echo "${{ secrets.ENV_PROD_DB }}" > .env.prod.db
            DOCKER_IMAGE_TAG=${{ steps.prep.outputs.BUILD_ID }} docker-compose -f docker-compose.prod.yml up -d --build
